# 0. Cloner le projet (COTE ORIGIN vers COTE LOCAL)
git clone https://github.com/moundjis/MediSoft-Pil.git

# 1. Recuperer les dernieres mises a jour de la branche principale MAIN
git pull origin main

# 2. Creer une branche secondaire (COTE LOCAL) et se placer dessus
git switch -c branche-secondaire

# 3. Verifier sur quelle branche on se situe
git branch 

# 4. Creer la branche secondaire sur le depot distant (COTE ORIGIN) et etablir la connexion : LOCAL-ORIGIN
git push -u origin branche-secondaire

# 5. Ajouter les fichiers modifies 
git add .

# 6. Enregistrer le travail effectue avec un titre
git commit -m "Resume de mon travail"

# 7. Envoyer le travail effectue sur la branche secondaire (COTE LOCAL) --vers--> COTE ORIGIN
git push origin branche-secondaire

# 8. Mot cles pour les titres des commits
    Fix: ou Bugfix: pour des corrections de bugs.
    Feat: pour les nouvelles fonctionnalités.
    Chore: pour les tâches techniques non visibles pour l’utilisateur (comme la mise à jour des dépendances).
    Docs: pour les modifications liées à la documentation.
    Refactor: pour les refontes de code sans ajout de nouvelles fonctionnalités.
    Style: pour les corrections de style (formatage, indentation).
    
Exemple :
    git commit -m "Feat: Ajoute une fonctionnalité de recherche par catégorie
    Permet à l'utilisateur de filtrer les résultats par catégorie. La recherche est effectuée sur la base de données en temps réel."


###################################################################################################
#
#  IMPORTANT : 
#   Cette commande sera effectuee uniquement par la personne responsable des fusions des branches.
#
#   # 100. Fusionner la branche secondaire dans la branche principale MAIN
#   git checkout main
#   git pull origin main
#   git merge branche-secondaire 
#   git push origin main 
#
###################################################################################################