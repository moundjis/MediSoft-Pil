# 0. Cloner le projet (COTE ORIGIN vers COTE LOCAL)
git clone https://github.com/moundjis/MediSoft-Pil.git

# 1. Recuperer les dernieres mises a jour de la branche principale MAIN
git pull origin main

# 2. Creer une branche secondaire (COTE LOCAL) et se placer dessus
git switch -c branche-secondaire(*)

# 3. Verifier sur quelle branche on se situe
git branch 

# 4. Creer la branche secondaire sur le depot distant (COTE ORIGIN) et etablir la connexion : LOCAL-ORIGIN
git push -u origin branche-secondaire

# 5. Ajouter les fichiers modifies 
git add .

# 6. Enregistrer le travail effectue avec un titre
git commit -m "Resume de mon travail"

# 7. Envoyer le travail effectue sur la branche secondaire (COTE LOCAL) --vers--> COTE ORIGIN
git push origin branche-secondaire


###########################################
    CREATION - COMMITS                    
###########################################
    Fix             : pour des corrections de bugs.
    Feat            : pour les nouvelles fonctionnalites.
    Chore           : pour les taches techniques non visibles pour l’utilisateur (comme la mise à jour des dependances).
    Docs            : pour les modifications liees a la documentation.
    Refactor        : pour les refontes de code sans ajout de nouvelles fonctionnalites.
    Style           : pour les corrections de style (formatage, indentation).
    
Exemple :
    git commit -m "Feat: Ajoute une fonctionnalite de recherche par categorie
    Permet à l'utilisateur de filtrer les résultats par catégorie. La recherche est effectuee sur la base de donnees en temps reel."


###########################################
    CREATION -  BRANCHE SECONDAIRE        
###########################################
    feature/        : Pour ajouter une nouvelle fonctionnalite
    bugfix/         : Pour corriger un bug detecte en developpement
    hotfix/         : Pour une correction urgente en production
    refactor/       : Pour reorganiser ou ameliorer du code sans ajouter de nouvelles fonctionnalites
    docs/           : Pour modifier ou ajouter de la documentation

Exemple :
    git branch feature/ajout-authentification
    git branch bugfix/correction-dashboard
    git branch docs/mise-a-jour-readme


###########################################
    FUSION DES BRANCHES                   
###########################################
Cette commande sera effectuee uniquement par la personne responsable des fusions des branches.
    git checkout main
    git pull origin main
    git merge branche-secondaire 
    git push origin main